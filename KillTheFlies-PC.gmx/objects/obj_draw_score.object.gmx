<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    //LEO
/*
ini_open("scores_MATAMOSCAS.ini"); //opens file for writing and reading. If doesn't exist, Game Maker creates it            
for (i = 0; i&lt;10; i++)
{
    //fill the global scores array with values from the ini file. If no values are present, then fill with name = unknown and score = 0
    global.score_array[i, 0] = ini_read_string(string(i), "Name", "unknown");
    global.score_array[i, 1] = ini_read_real(string(i), "Score", 0);
}
ini_close();   
 */       




//MUESTRO
draw_set_font(letra_perdiste);
    // se alinea en el centro
draw_set_halign(fa_center); // eje x
draw_set_valign(fa_middle); // eje y
draw_set_color(c_white);



xx = room_width/2 - 150;
yy = 100;


draw_text(xx,yy,"BEST RECORDS");

// Se busca el mayor
mayor = 0;
for (i = 0; i&lt;10; i++){
    if (global.score_array[i, 1]&gt;mayor){
        mayor = global.score_array[i, 1];
    }
}    

// Se busca el nombre, si existe 
existe = 0;
for (h = 0; h&lt;10; h++){
        if (global.score_array[h, 0]== global.nombre){
            existe = 1;
        }
    }    


// Recorro todos los el arreglo en forma inversa (menor a mayor puntaje)
for (i = 0; i&lt;10; i++){

    if (global.p&gt;global.score_array[i, 1] and existe == 0){
           for (j = 10; j&gt;i; j--)
                    {
                        global.score_array[j, 0] = global.score_array[j-1, 0];
                        global.score_array[j, 1] = global.score_array[j-1, 1];
                    }
    
        // Reemplazo el primer valor
        global.score_array[i,0]=global.nombre;
        global.score_array[i,1]=global.p;
        break;
    }
}   



// Dibujo la tabla de score
for (i = 0; i&lt;10; i++){               
    yy += 50;
    draw_text(xx, yy, string(global.score_array[i, 0]))
    draw_text(xx + 200, yy, string(global.score_array[i, 1]));
}






     
/*

// puntaje
for (i = 0; i&lt;10; i++){
                //if the player's score is greater than the spot in question
                 if (global.p&gt;global.score_array[i, 1] &amp;&amp; existe == 0){
                {
                    //starting at the last element of the array, set each element to the one before it.
                    for (j = 9; j&gt;i; j--)
                    {
                        global.score_array[j, 0] = global.score_array[j-1, 0];
                        global.score_array[j, 1] = global.score_array[j-1, 1];
                    }
                    
                    //now set the space to that of this player
                    global.score_array[i, 0] = global.nombre;
                    global.score_array[i, 1] = global.p;
                    break;
                }
                yy += 50;
    draw_text(xx, yy, string(global.score_array[i, 0]))
    draw_text(xx + 200, yy, string(global.score_array[i, 1]));
                
                
            }
}
*/

/* 
 
 if (global.p &gt; global.score_array[0, 1])
 {
 global.score_array[0, 1] = global.p;
 }

     for (i = 0; i&lt;10; i++)
{
            yy += 50;
    draw_text(xx, yy, string(global.score_array[i, 0]))
    draw_text(xx + 200, yy, string(global.score_array[i, 1]));
            

}        
*/ 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(room_menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
